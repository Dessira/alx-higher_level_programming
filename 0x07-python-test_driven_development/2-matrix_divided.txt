Doctest for ``matrix_divided``


First import
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check using matrix with correct input:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check using matrix list with different lengths:
	>>> matrix = [[1, 2, 3], [2, 3]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Check using matrix with strings and char:
	>>> matrix = [['i', "chicken", "goof", 1], [1, 2, 3, 4]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check using div equal to 0:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Check using div with char:
	>>> print(matrix_divided(matrix, 'h'))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Check using negative matrix list:
	>>> matrix = [[-2, 6, -4, 3], [-3, 1, 7, 8]]
	>>> print(matrix_divided(matrix, 2))
	[[-1.0, 3.0, -2.0, 1.5], [-1.5, 0.5, 3.5, 4.0]]
